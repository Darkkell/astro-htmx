---
const formData = await  Astro.request.formData()
const search = formData.get("search")

const res = await fetch(`https://search.imdbot.workers.dev/?q=${search}`)

const { description } = (await res.json()) as {
    description:Array<Record<string, string>>
}

const movies = description?.map((movie) =>{

    let {
        "#TITLE": title,
        "#YEAR": year,
        "#IMG_POSTER": poster,
        "#RANK": rank,
        "#ACTORS": actors
    } = movie as Record<string, string>

    poster != undefined ? poster : poster = "https://cdn.wallpapersafari.com/16/83/jGJp1D.jpg"
    year != undefined ? year : year = "?"

    return {
        title,
        year,
        poster,
        rank,
        actors
    }
})
---

{
    movies.map((movie) =>{
        return(
            <li>
                <article class="card aspect-[11/16]">
                    <img
                        src={movie.poster}
                        alt={movie.title}
                        class="aspect-[11/16] w-full h-auto object-cover rounded-xl">

                    <div class="info">
                        <h2 class="text-white">
                            {movie.title}{" "}<span class="text-sm text-gray-400">({movie.year})</span>
                        </h2>
                        <h2 class="text-white">
                            IMD Rank: <span class="text-sm text-gray-400">{movie.rank}</span>
                        </h2>
                        <h2 class="text-white">
                            Actors: <span class="text-sm text-gray-400">{movie.actors}</span>
                        </h2>
                    </div>
                </article>
            </li>

        )
    })
}

<style>

.card {
    position: relative;
    padding: 0 1rem 10rem ;
    display: flex;
    align-items: flex-end;
    transition: 0.2s ease-out;
    border-radius: 0.5rem;
    img {
        -o-object-fit: cover;
        object-fit: cover;
        position: absolute;
        top: 0;
        left: 0;
        border-radius: 0.5rem;
    }
    .info {
        position: relative;
        z-index: 3;
        color:white;
        opacity: 0;
        transform: translateY(30px);
        transition: 0.5s;
        h1 {
            margin: 0px;
        }
        p {
            letter-spacing: 1px;
            font-size: 15px;
            margin-top: 8px;
        }
    }
}
.card:hover {
  transform: translateY(5px);
    .info {
        opacity: 1;
        transform: translateY(0px);
    }
}
.card:hover:before {
  opacity: 1;
}

.card:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
  border-radius: 8px;
  background: rgba(0, 0, 0, 0.6);
  z-index: 2;
  transition: 0.5s;
  opacity: 0;
}
</style>
